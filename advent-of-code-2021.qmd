---
title : Advent of Code 2021
subtitle: "[adventofcode.com](https://adventofcode.com/){.aoc-yellow}"
#author: Jo Dudding
#date: today
format: 
  html:
    #embed-resources: true
    #standalone: true
    fig-width: 8
    fig-height: 4
    theme: ['advent-of-code.scss']
    highlight-style: nord
    toc: true
    toc_float: 
      collapsed: true
    code-fold: true  
execute: 
  echo: true
  warning: false
  message: false
knitr: 
  opts_knit: 
    root-dir: "`r here::here()`"
---
  
# Introduction

This analysis is my attempt at [adventofcode.com](https://adventofcode.com/2021) using R and Quarto.

Here's an overview from [adventofcode.com](https://adventofcode.com/2021).

> You're minding your own business on a ship at sea when the overboard alarm goes off! You rush to see if you can help. Apparently, one of the Elves tripped and accidentally sent the sleigh keys flying into the ocean!
> 
> Before you know it, you're inside a submarine the Elves keep ready for situations like this. It's covered in Christmas lights (because of course it is), and it even has an experimental antenna that should be able to track the keys if you can boost its signal strength high enough; there's a little meter that indicates the antenna's signal strength by displaying 0-50 [stars]{.aoc-yellow}.
> 
> Your instincts tell you that in order to save Christmas, you'll need to get all [fifty stars]{.aoc-yellow} by December 25th.
> 
> Collect stars by solving puzzles. Two puzzles will be made available on each day in the Advent calendar; the second puzzle is unlocked when you complete the first. Each puzzle grants [one star]{.aoc-yellow}. Good luck!


```{r}
#| label: setup

library(tidyverse)
library(scales)
library(here)

stars <- 0

```

# Day 1: Sonar Sweep

[Instructions](https://adventofcode.com/2021/day/1)

```{r}
#| label: day1-part1
raw_1 <- readLines('inputs/2021-day1.csv')

df2_1 <- tibble(depth = as.numeric(raw_1)) |> 
  mutate(
    row = row_number(),
    change = if_else(
      row == 1,
      0,
      depth - lag(depth)
    )
  )

increases <- sum(df2_1$change > 0)


stars <- stars + 1
```

There were 
`r comma(increases)`
increases.

```{r}
#| label: day1-part2

df2_1b <- df2_1 |> 
  mutate(
    sumlag = depth + lag(depth, 1) + lag(depth, 2) ,
    change_3 = if_else(
      row <= 3,
      0,
      sumlag - lag(sumlag)
    )
  )

increases_lagged <- sum(df2_1b$change_3 > 0)

stars <- stars + 1

```

With the lag there were 
`r comma(increases_lagged)`
increases.

# Day 2: Dive!

[Instructions](https://adventofcode.com/2021/day/2)

```{r}
#| label: day2-part1
df_2 <- tibble(x = readLines('inputs/2021-day2.csv')) |> 
  separate(x, into = c('direction', 'size'), convert = TRUE) |> 
  mutate(
    depth = case_when(
      direction == 'down' ~ size,
      direction == 'up' ~ -size,
      TRUE ~ 0L
    ),
    horizontal = case_when(
      direction == 'forward' ~ size,
      TRUE ~ 0L
    ),
    cum_depth = cumsum(depth),
    cum_horizontal = cumsum(horizontal)
  )


depth_horiz <- df_2 |> 
  filter(row_number() == n()) |> 
  mutate(
    mult = cum_depth * cum_horizontal
  ) |> 
  pull(mult)

stars <- stars + 1
```

The sum was
`r comma(depth_horiz)`.

```{r}
#| label: day2-part2

df_2b <- df_2 |> 
  mutate(
    aim = depth,
    cum_aim = cum_depth,
    depth = case_when(
      direction == 'forward' ~ size * cum_aim,
      TRUE ~ 0L
      
    ),
    cum_depth = cumsum(depth)
  )

depth_horiz2 <- df_2b |> 
  filter(row_number() == n()) |> 
  mutate(
    mult = cum_depth * cum_horizontal
  ) |> 
  pull(mult)


stars <- stars + 1

```

The sum was
`r comma(depth_horiz2)`.

# Source code

The source code can be found at [github.com/JoDudding/advent-of-code](https://github.com/JoDudding/advent-of-code).

```{bash}
#| label: quarto-preview-instruction
#| echo: false

# quarto preview advent-of-code-2021.qmd
# quarto render advent-of-code-2021.qmd

```

